def get_args():
    parser = argparse.ArgumentParser()
    # Train params
    parser.add_argument('--batch_size', default=128, type=int)
    parser.add_argument('--lr', default=0.001, type=float)
    parser.add_argument('--use_grad_clip', default=True, type=bool)
    parser.add_argument('--grad_clip', default=3, type=float, help='梯度剪裁的L2范数阈值')
    parser.add_argument('--maxlen', default=101, type=int)
    # user dnn
    parser.add_argument('--user_dnn_hidden_units', default=[], type=list)
    parser.add_argument('--item_dnn_hidden_units', default=[], type=str)
    # Baseline Model construction
    parser.add_argument('--hidden_units', default=64, type=int)
    parser.add_argument('--num_blocks', default=4, type=int)
    parser.add_argument('--num_epochs', default=6, type=int)
    parser.add_argument('--num_heads', default=4, type=int)
    parser.add_argument('--dropout_rate', default=0.2, type=float)
    parser.add_argument('--l2_emb', default=0.0, type=float)
    parser.add_argument('--device', default='cuda', type=str)
    parser.add_argument('--inference_only', action='store_true')
    parser.add_argument('--state_dict_path', default=None, type=str)
    parser.add_argument('--norm_first', action='store_true')
    parser.add_argument('--mha_bias', default=True, type=bool)
    parser.add_argument('--ffn_bias', default=True, type=bool)
    parser.add_argument('--n_routed_experts', default=64, type=int)
    parser.add_argument('--n_shared_experts', default=2, type=int)
    parser.add_argument('--n_activated_experts', default=6, type=int)
    parser.add_argument('--n_expert_groups', default=1, type=int)
    parser.add_argument('--n_limited_groups', default=1, type=int)
    parser.add_argument('--score_func', default="sigmoid", type=str)
    
    parser.add_argument('--activation', 
                    default='relu', 
                    type=str, 
                    choices=['relu', 'tanh', 'sigmoid', 'leaky_relu', 'elu', 'prelu'],
                    help='选择激活函数类型')
    # MoE
    parser.add_argument('--route_scale', default=1., type=float)
    parser.add_argument('--moe_inter_dim', default=64, type=int)

    parser.add_argument('--norm_method', default='rms', type=str, choices=['rms', 'layer'])

    # nce
    parser.add_argument('--temperature', default=0.07, type=float)
    
    # MMemb Feature ID
    parser.add_argument('--mm_emb_id', nargs='+', default=['81'], type=str, choices=[str(s) for s in range(81, 87)])

    # Warm up training parameters
    parser.add_argument('--warmup_steps', default=6300, type=int, help='Warm up steps')
    parser.add_argument('--warmup_lr', default=0.0001, type=float, help='Initial learning rate for warm up')

    parser.add_argument('--use_cos_similarity', default=True, type=bool, help='use cosine similarity for recall')

    #triple loss
    parser.add_argument('--Triple_Loss_lambda', default=0.3, type=float)
    parser.add_argument('--margin', default=0.6, type=float)
    
    args = parser.parse_args()

    return args
